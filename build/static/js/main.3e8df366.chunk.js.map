{"version":3,"sources":["components/Nav.tsx","services/base.ts","types/index.ts","utils/initData.ts","store/template.ts","components/side-bar/ImageItem.tsx","components/side-bar/TextItem.tsx","components/side-bar/Sidebar.tsx","services/common.ts","components/Footer.tsx","store/context.ts","utils/mouseEvent.ts","utils/index.ts","components/layer/Border.tsx","assets/rotate.svg","components/layer/HoverBorder.tsx","components/layer/Layer.tsx","utils/helpLine.ts","components/layer/TextEditor.tsx","components/Canvas.tsx","utils/const.ts","components/tool-bar/Index.tsx","components/Editor.tsx","components/Main.tsx","pages/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","Header","Img","src","styled","header","img","service","axios","create","baseURL","timeout","interceptors","response","use","data","LAYER_TYPE","defaultTemplate","global","width","height","background","color","layers","id","type","position","x","y","rotate","reverse","source","imageUrl","zIndex","content","style","font","fontSize","lineHeight","textAlign","fontWeight","underline","template","Object","assign","map","layer","isSelected","isEditing","isHover","scale","localTemplateCache","localStorage","getItem","JSON","parse","templateStore","observable","layerType","EMPTY","needUpdateLayerHeight","isMoving","this","getTemplate","_template","cloneDeep","l","setTemplate","val","setLayers","setLayer","idx","findIndex","addLayer","push","setLayerType","IMAGE","TEXT","removeLayer","splice","setLayerLevel","level","selectLayer","forEach","document","dispatchEvent","Event","hoverLayer","editTextLayer","resetSelectStatus","resetEditStatus","setBackgroundColor","setNeedUpdateLayerHeight","setIsMoving","action","bound","reaction","join","replaceAll","stringify","setItem","delay","observer","image","Image","flexBasis","webformatWidth","webformatHeight","onClick","newLayer","String","Date","now","webformatURL","length","alt","div","size","Panel","Collapse","Search","Input","ajaxLock","isLoadMore","Sidebar","useState","list","setList","page","per_page","image_type","q","orientation","safesearch","query","setQuery","showFilter","setShowFilter","useEffect","params","ajax","url","key","lang","then","concat","hits","finally","Side","defaultActiveKey","collapsible","extra","onSearch","placeholder","title","trigger","visible","onVisibleChange","FilterOutlined","e","stopPropagation","FilterPanel","ListContent","ImageItem","marginTop","TextItem","aside","Footer","setScale","FooterBar","className","tipFormatter","defaultValue","min","max","onChange","Math","round","footer","ScaleContext","createContext","BackgroundContext","MouseEvents","handleMove","handleUp","payload","startCoords","preCoords","mouseUp","onmousemove","onmouseup","mouseMove","event","diffX","clientX","diffY","clientY","diff","curCoords","mouseDown","POINT_TYPE","getCenterCoords","p1","p2","calcRotatedCoords","point","center","PI","cos","sin","MIN_SIZE","INIT_ANGLE","ANGLE_TO_CURSOR","start","end","cursor","info","useContext","cursors","setCursors","resize","whRatio","newX","newY","newWidth","newHeight","TL","TR","BL","BR","T","B","L","R","resizeNormal","pointRect","target","getBoundingClientRect","canvasRect","querySelector","pointCenter","left","Number","top","symmetricPoint","curPoint","oldHeight","newCenterPoint","newOriginCurPoint","newOriginSymmetricPoint","abs","latestOriginCurPoint","latestCurPoint","sqrt","newCenter","isReverse","angle","resizeWithRotate","calcCursors","useCallback","a","newAngle","item","find","i","BorderEl","transform","PointBR","onMouseDown","PointTL","PointTR","PointBL","PointL","PointR","PointT","PointB","RotateIcon","icon","rotateIcon","borderEl","closest","rect","rotateCenterPoint","offsetY","offsetX","atan2","Point","span","bottom","display","alignItems","justifyContent","pointerEvents","borderRadius","boxShadow","userSelect","props","HoverBorder","children","setIsSelectedBackground","realRect","layerId","allLayers","canvasSize","vLineEl","hLineEl","vType","hType","vLineHandle","targetX","res","hLineHandle","targetY","renderLine","vLine","visibility","hLine","getRect","init","scl","rad","move","helpLine","helpLineRect","initHelpLine","helpLinePipe","updatePosition","newPosition","hideLine","LayerWrapper","onMouseEnter","onMouseOut","LayerContent","TransportBorder","Border","createPortal","editorRef","useRef","editor","setEditor","onTextChange","_layer","text","getText","current","instance","Quill","setText","enable","setSelection","on","off","TextWrapper","Text","onDoubleClick","Editor","ref","spellCheck","fontFamily","textDecorationLine","isSelectedBackground","Wrapper","CanvasContent","Background","BACKGROUND","Layer","toJS","draggable","TransportEditor","TextEditor","LayerControl","BackgroundBorder","VLine","HLine","TextControl","backgroundColor","flex","margin","overflow","FONT_LIST","name","value","FONTSIZE_LIST","Option","Select","activeLayer","layerScale","hasUnderline","levelInfo","onReverseImage","direction","ToolBarWrapper","ItemGroup","includes","ToolItem","clr","rgba","rgb","r","g","b","ColorItem","f","toFixed","isNaN","BoldOutlined","UnderlineOutlined","align","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","overlay","Item","padding","SwapOutlined","sort","placement","DeleteOutlined","canvasWrapperRef","wrapperEl","canvasWidth","canvasHeight","clientWidth","clientHeight","onDeleteListener","activeElement","body","addEventListener","removeEventListener","CanvasWrapper","Provider","Canvas","num","Main","MainBody","main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e8df366.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport default function Nav () {\n  return <Header>\n    <Img src=\"/logo.webp\" />\n  </Header>\n}\n\nconst Header = styled.header`\n  height: 56px;\n  display: flex;\n  align-items: center;\n  padding-left: 20px;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n`\n\nconst Img = styled.img`\n  width: 48px;\n  height: 48px;\n  object-fit: cover;\n`","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: 'https://pixabay.com/api',\n  timeout: 10000\n})\n\nservice.interceptors.response.use((response) => {\n  return response.data\n})\n\nexport default service","export interface TemplateInfo {\n  global: {\n    width: number;\n    height: number;\n  },\n  background: {\n    color: string;\n  },\n  layers: Layer[];\n}\n\nexport interface Layer {\n  id: string;\n  type: LayerType;\n  width: number;\n  height: number;\n  position: {\n    x: number;\n    y: number;\n  };\n  rotate: number;\n  reverse?: {\n    x: number;\n    y: number;\n  },\n  source: {\n    imageUrl?: string;\n    content?: string;\n  };\n  style?: FontStyle;\n  zIndex: number;\n  isSelected?: boolean;\n  isHover?: boolean;\n  isEditing?: boolean;\n  scale?: number;\n}\n\nexport interface FontStyle {\n  font: string;\n  fontSize: number;\n  lineHeight: number;\n  color: string;\n  textAlign: Align;\n  fontWeight: number;\n  underline: boolean;\n}\n\nexport type LayerType = 'image' | 'text'\nexport type Align = 'left' | 'center' | 'right' | 'justify'\n\nexport enum LAYER_TYPE {\n  EMPTY = 'empty',\n  IMAGE = 'image',\n  TEXT = 'text',\n  BACKGROUND = 'background'\n}","import { TemplateInfo } from 'types'\n\nexport const defaultTemplate: TemplateInfo = {\n  global: {\n    width: 1280,\n    height: 720\n  },\n  background: {\n    color: '#fff'\n  },\n  layers: [\n    {\n      id: '1',\n      type: 'image',\n      width: 510,\n      height: 340,\n      position: {\n        x: 100,\n        y: 100\n      },\n      rotate: 0,\n      reverse: {\n        x: 1,\n        y: 1\n      },\n      source: {\n        imageUrl: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262__340.jpg'\n      },\n      zIndex: 1\n    },\n    {\n      id: '2',\n      type: 'text',\n      width: 380,\n      height: 72,\n      position: {\n        x: 100,\n        y: 500\n      },\n      rotate: 0,\n      source: {\n        content: '双击编辑文字'\n      },\n      style: {\n        font: 'Microsoft Yahei',\n        fontSize: 60,\n        lineHeight: 1.2,\n        color: '#000',\n        textAlign: 'left',\n        fontWeight: 400,\n        underline: false\n      },\n      zIndex: 2\n    }\n  ]\n}","import { observable, action, reaction } from 'mobx'\nimport { defaultTemplate } from 'utils/initData'\nimport { TemplateInfo, Layer, LAYER_TYPE } from 'types'\nimport { cloneDeep } from 'lodash'\n\nlet template: TemplateInfo = Object.assign(defaultTemplate, {\n  layers: defaultTemplate.layers.map(layer => { return {...layer, isSelected: false, isEditing: false, isHover: false, scale: 1} })\n})\n\nconst localTemplateCache = localStorage.getItem('TEMPLATE')\nif (localTemplateCache) {\n  template = JSON.parse(localTemplateCache)\n}\n\n// 模板store\nexport const templateStore = observable({\n  // 模板\n  template: template,\n  // 当前编辑图层类型\n  layerType: LAYER_TYPE.EMPTY,\n  // 是否需要重新计算图层的高度，比如改变字体大小时需要\n  needUpdateLayerHeight: false,\n  // 图层是否正在移动\n  isMoving: false,\n\n  get layers (): Layer[] {\n    return this.template.layers\n  },\n\n  // 获取最新的模板\n  getTemplate () {\n    const _template = cloneDeep(templateStore.template)\n    _template.layers = _template.layers.map(l => {\n      if (l.type === 'text' && l.style && l.scale) {\n        l.style.fontSize *= l.scale\n      }\n      delete l.isSelected\n      delete l.isEditing\n      delete l.scale\n      return l\n    })\n    return _template\n  },\n\n  // 修改整体模板\n  setTemplate (val: TemplateInfo) {\n    this.template = val\n  },\n\n  // 修改全部图层\n  setLayers (layers: Layer[]) {\n    this.template.layers = layers\n  },\n\n  // 修改单个图层\n  setLayer (layer: Layer) {\n    const idx = this.layers.findIndex(l => l.id === layer.id)\n    if (idx > -1) {\n      this.layers[idx] = layer\n    }\n  },\n\n  // 新增单个图层\n  addLayer (layer: Layer) {\n    this.layers.push(layer)\n    if (layer.type === 'image') {\n      this.setLayerType(LAYER_TYPE.IMAGE)\n    } else if (layer.type === 'text') {\n      this.setLayerType(LAYER_TYPE.TEXT)\n    }\n  },\n\n  // 移除单个图层\n  removeLayer (id: string) {\n    const idx = this.layers.findIndex(l => l.id === id)\n    if (idx > -1) {\n      this.layers.splice(idx, 1)\n      this.setLayerType(LAYER_TYPE.EMPTY)\n    }\n  },\n\n  // 设置图层层级\n  setLayerLevel (id: string, level: number) {\n    const idx = this.layers.findIndex(l => l.id === id)\n    if (idx > -1) {\n      this.layers[idx].zIndex = level\n    }\n  },\n\n  // 选择图层\n  selectLayer (id: string) {\n    this.layers.forEach(layer => {\n      layer.isSelected = layer.id === id\n      if (layer.isSelected) {\n        if (layer.type === 'image') {\n          this.setLayerType(LAYER_TYPE.IMAGE)\n        } else if (layer.type === 'text') {\n          this.setLayerType(LAYER_TYPE.TEXT)\n        }\n      }\n    })\n    // 隐藏一些下拉组件\n    document.dispatchEvent(new Event('mousedown'))\n  },\n\n  // 鼠标经过图层\n  hoverLayer (id?: string) {\n    this.layers.forEach(layer => {\n      layer.isHover = id ? layer.id === id : false\n    })\n  },\n\n  // 设置当前选择的图层类型\n  setLayerType (type: LAYER_TYPE) {\n    this.layerType = type\n  },\n\n  // 设置文字图层编辑状态\n  editTextLayer (id: string) {\n    this.layers.forEach(layer => {\n      layer.isEditing = layer.id === id\n    })\n  },\n\n  // 重置所有图层选中状态\n  resetSelectStatus () {\n    this.layers.forEach(layer => {\n      layer.isSelected = false\n    })\n    this.setLayerType(LAYER_TYPE.EMPTY)\n  },\n\n  // 重置所有文字图层编辑状态\n  resetEditStatus () {\n    this.layers.forEach(layer => {\n      layer.isEditing = false\n    })\n  },\n\n  // 设置背景色\n  setBackgroundColor (color: string) {\n    this.template.background.color = color\n  },\n\n  // 设置needUpdateLayerHeight\n  setNeedUpdateLayerHeight (val: boolean) {\n    this.needUpdateLayerHeight = val\n  },\n\n  // 设置isMoving\n  setIsMoving (val: boolean) {\n    this.isMoving = val\n  }\n}, {\n  setTemplate: action.bound,\n  getTemplate: action.bound,\n  setLayers: action.bound,\n  setLayer: action.bound,\n  addLayer: action.bound,\n  removeLayer: action.bound,\n  selectLayer: action.bound,\n  setLayerLevel: action.bound,\n  hoverLayer: action.bound,\n  setLayerType: action.bound,\n  editTextLayer: action.bound,\n  resetSelectStatus: action.bound,\n  resetEditStatus: action.bound,\n  setBackgroundColor: action.bound,\n  setNeedUpdateLayerHeight: action.bound,\n  setIsMoving: action.bound\n})\n\n// 切换图层时重置文字编辑状态\n// 清空空文字图层\nreaction(\n  () => templateStore.layers.map(l => l.isSelected).join(''),\n  () => {\n    templateStore.resetEditStatus()\n    const idx = templateStore.layers.findIndex(l => l.type === 'text' && !l.source.content?.replaceAll(/\\n/g, ''))\n    if (idx > -1) {\n      templateStore.removeLayer(templateStore.layers[idx].id)\n    }\n  }\n)\n\n// 保存到本地\nconst save = () => {\n  const template = cloneDeep(templateStore.template)\n  template.layers = template.layers.map(l => {\n    l.isSelected = false\n    l.isEditing = false\n    l.isHover = false\n    return l\n  })\n  localStorage.setItem('TEMPLATE', JSON.stringify(template))\n}\n\n// 侦听保存\nreaction(\n  () => {\n    const template = cloneDeep(templateStore.template)\n    template.layers = template.layers.map(l => {\n      delete l.isSelected\n      delete l.isEditing\n      delete l.isHover\n      return l\n    })\n    return JSON.stringify(template)\n  },\n  save,\n  {\n    delay: 500\n  }\n)","import styled from \"@emotion/styled\";\nimport { ImageItem as ImageInfo } from \"types/image\";\nimport { templateStore } from 'store/template';\nimport { Layer } from 'types';\nimport { observer } from 'mobx-react';\n\nexport default observer(({ image }: { image: ImageInfo }) => {\n  const { template, layers, addLayer, resetSelectStatus } = templateStore\n\n  // 使用图片\n  const onUseImage = () => {\n    const newLayer: Layer = {\n      id: String(Date.now()),\n      type: 'image',\n      width: image.webformatWidth,\n      height: image.webformatHeight,\n      position: {\n        x: (template.global.width - image.webformatWidth) / 2,\n        y: (template.global.height - image.webformatHeight) / 2\n      },\n      rotate: 0,\n      reverse: {\n        x: 1,\n        y: 1\n      },\n      source: {\n        imageUrl: image.webformatURL\n      },\n      zIndex: layers.length ? layers[layers.length - 1].zIndex + 1 : 1,\n      isSelected: true,\n      isEditing: false,\n      scale: 1\n    }\n    resetSelectStatus()\n    addLayer(newLayer)\n  }\n\n  return <Image\n    style={{\n      flexBasis: `${100 * image.webformatWidth / image.webformatHeight}px`\n    }}\n    onClick={onUseImage}\n  >\n    <img src={image.webformatURL} alt=\"\" />\n  </Image>\n})\n\nconst Image = styled.div`\n  position: relative;\n  margin: 0 10px 10px 0;\n  background-color: #f0f1f4;\n  overflow: hidden;\n  flex-grow: 1;\n\n  img {\n    min-width: 100%;\n    height: 100px;\n    object-fit: cover;\n  }\n`","import { templateStore } from 'store/template';\nimport { Layer } from 'types';\nimport { Button } from 'antd';\nimport { observer } from 'mobx-react';\n\nexport default observer(() => {\n  const { template, layers, addLayer, resetSelectStatus, editTextLayer } = templateStore\n\n  // 新增文本\n  const onUseImage = () => {\n    const newLayer: Layer = {\n      id: String(Date.now()),\n      type: 'text',\n      width: 380,\n      height: 72,\n      position: {\n        x: (template.global.width - 300) / 2,\n        y: (template.global.height - 72) / 2\n      },\n      rotate: 0,\n      source: {\n        content: '双击编辑文字'\n      },\n      style: {\n        font: '微软雅黑',\n        fontSize: 60,\n        lineHeight: 1.2,\n        color: '#000',\n        textAlign: 'left',\n        fontWeight: 400,\n        underline: false\n      },\n      zIndex: layers.length ? layers[layers.length - 1].zIndex + 1 : 1,\n      isSelected: true,\n      isEditing: true,\n      scale: 1\n    }\n    resetSelectStatus()\n    addLayer(newLayer)\n    editTextLayer(newLayer.id)\n  }\n\n  return <Button size=\"large\" style={{ width: '100%' }} onClick={onUseImage}>\n    添加文本\n  </Button>\n})","import styled from \"@emotion/styled\";\nimport { useState, useEffect } from \"react\";\nimport { ImageItem as ImageInfo, SearchQuery } from \"types/image\";\nimport { getImages } from \"services/common\";\nimport { Collapse } from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport { Popover, Input, Button } from 'antd';\nimport ImageItem from './ImageItem'\nimport TextItem from './TextItem'\n\nconst { Panel } = Collapse\nconst { Search } = Input\n\nlet ajaxLock = false\nlet isLoadMore = false\n\nexport default function Sidebar () {\n  // 图片列表\n  const [list, setList] = useState<ImageInfo[]>([])\n  // 图片查询参数\n  const [query, setQuery] = useState<Partial<SearchQuery>>({\n    page: 1,\n    per_page: 20,\n    image_type: 'all',\n    q: '',\n    orientation: 'all',\n    safesearch: true\n  })\n\n  const [showFilter, setShowFilter] = useState(false)\n\n  useEffect(() => {\n    getImages(query).then((data: any) => {\n      if (isLoadMore) {\n        setList(list => list.concat(data.hits))\n      } else {\n        setList(data.hits)\n      }\n    }).finally(() => {\n      ajaxLock = false\n    })\n  }, [query])\n\n  // 加载更多图片\n  const onLoadMore = () => {\n    if (ajaxLock) return\n    ajaxLock = true\n    const page = query.page\n    isLoadMore = true\n    setQuery(Object.assign({}, query, {\n      page: page ? page + 1 : 1\n    }))\n  }\n\n  // 图片筛选面板\n  const FilterPanel = () => {\n    const onSearch = (val: string) => {\n      if (val) {\n        isLoadMore = false\n        setQuery(Object.assign({}, query, {\n          q: val,\n          page: 1\n        }))\n        setShowFilter(false)\n      }\n    }\n\n    const Content = () => {\n      return <>\n        <Search placeholder=\"搜索\" onSearch={onSearch} style={{ width: 200 }} />\n      </>\n    }\n\n    return <Popover\n      content={Content}\n      title=\"筛选\"\n      trigger=\"click\"\n      visible={showFilter}\n      onVisibleChange={visible => setShowFilter(visible)}\n    >\n      <FilterOutlined onClick={(e) => { e.stopPropagation(); setShowFilter(true) }} />\n    </Popover>\n  }\n\n  return <Side>\n    <Collapse defaultActiveKey={['1']} collapsible=\"header\">\n      <Panel header={<div style={{ width: '300px' }}>图片</div>} key=\"1\" extra={FilterPanel()}>\n        <ListContent>\n          {list.map(image => <ImageItem key={image.id} image={image} />)}\n          <Button style={{ width: '100%', marginTop: '20px' }} onClick={onLoadMore}>加载更多</Button>\n      </ListContent>\n      </Panel>\n      <Panel header={<div style={{ width: '300px' }}>文字</div>} key=\"2\">\n        <ListContent>\n          <TextItem />\n        </ListContent>\n      </Panel>\n    </Collapse>\n  </Side>\n}\n\nconst Side = styled.aside`\n  flex: none;\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  height: 100%;\n  background-color: #fff;\n  border-right: 1px solid #ddd;\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    background: #fff;\n\n    &:horizontal {\n      height: 8px;\n    }\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #fff;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: #fff;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #c4c4c4;\n    border: 8px solid rgba(0, 0, 0, 0);\n    border-radius: 9999px;\n\n    &:hover {\n      background: #adadad;\n    }\n  }\n\n  .ant-collapse {\n    border: 0;\n    background-color: #fff;\n  }\n`\n\nconst ListContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 10px;\n  user-select: none;\n\n  &:after {\n    content: '';\n    display: block;\n    flex-grow: 99999;\n  }\n`\n","import ajax from './base'\n\nconst key = '24178889-8dbe9fccf0c585814c1dcb342'\n\nexport const getImages = (params: any): any => {\n  return ajax({\n    url: '/',\n    params: {\n      key,\n      lang: 'zh',\n      ...params\n    }\n  })\n}\n","import styled from \"@emotion/styled\";\nimport { Slider } from \"antd\";\n\nexport default function Footer ({ scale, setScale }: { scale: number; setScale: (n: number) => void }) {\n  const scaleChange = (val: number) => {\n    setScale(val / 100)\n  }\n\n  return <FooterBar>\n    <Slider\n      className=\"slider\"\n      tipFormatter={null}\n      defaultValue={scale * 100}\n      min={10} max={500}\n      onChange={scaleChange}\n    />\n    <div className=\"scale\">{Math.round(scale * 100)}%</div>\n  </FooterBar>\n}\n\nconst FooterBar = styled.footer`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  height: 44px;\n  padding-right: 40px;\n  background-color: #fff;\n  border-top: 1px solid #ddd;\n\n  .slider {\n    width: 240px;\n  }\n\n  .scale {\n    width: 100px;\n    padding-left: 20px;\n  }\n`\n","import { createContext } from \"react\";\nexport const ScaleContext = createContext<number>(1)\nexport const BackgroundContext = createContext<any>(null)","import { MouseEvent as MouseEventType } from \"react\";\n\nexport class MouseEvents {\n  constructor (e: MouseEventType<HTMLElement>, handleMove: (payload: any) => void, handleUp?: () => void) {\n    this.mouseDown(e)\n    this.handleMove = handleMove\n    handleUp && (this.handleUp = handleUp)\n  }\n  \n  private handleMove = (payload: any) => {}\n  private handleUp = () => {}\n\n  private startCoords = {\n    x: 0,\n    y: 0\n  }\n\n  private preCoords = {\n    x: 0,\n    y: 0\n  }\n\n  private mouseUp = () => {\n    document.onmousemove = null\n    document.onmouseup = null\n    this.handleUp()\n  }\n\n  private mouseMove = (event: any) => {\n    const diffX = event.clientX - this.preCoords.x\n    const diffY = event.clientY - this.preCoords.y\n    this.preCoords = {\n      x: event.clientX,\n      y: event.clientY\n    }\n    this.handleMove({\n      diff: {\n        x: diffX,\n        y: diffY\n      },\n      startCoords: this.startCoords,\n      curCoords: this.preCoords\n    })\n  }\n\n  private mouseDown = (e: MouseEventType<HTMLElement>) => {\n    this.startCoords = {\n      x: e.clientX,\n      y: e.clientY\n    }\n    this.preCoords = {\n      x: e.clientX,\n      y: e.clientY\n    }\n    document.onmousemove = this.mouseMove\n    document.onmouseup = this.mouseUp\n  }\n}","interface Coords {\n  x: number;\n  y: number;\n}\n\n// 求两点之间的中点坐标\nexport const getCenterCoords = (p1: Coords, p2: Coords): Coords => {\n  return {\n    x: p1.x + ((p2.x - p1.x) / 2),\n    y: p1.y + ((p2.y - p1.y) / 2)\n  }\n}\n\n/**\n * 计算根据圆心旋转后的点的坐标\n * @param point 旋转前的点坐标\n * @param center 旋转中心\n * @param rotate 旋转的角度\n * @return 旋转后的坐标\n */\n export const calcRotatedCoords = (point: Coords, center: Coords, rotate: number): Coords => {\n  rotate /= 180 / Math.PI\n  return {\n    x: (point.x - center.x) * Math.cos(rotate) - (point.y - center.y) * Math.sin(rotate) + center.x,\n    y: (point.x - center.x) * Math.sin(rotate) + (point.y - center.y) * Math.cos(rotate) + center.y\n  }\n}","import { Layer } from 'types';\nimport { MouseEvent, useContext, useState, useEffect, useCallback } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ScaleContext } from 'store/context';\nimport { MouseEvents } from 'utils/mouseEvent';\nimport { getCenterCoords, calcRotatedCoords } from 'utils';\nimport rotateIcon from 'assets/rotate.svg';\nimport { templateStore } from 'store/template';\nimport { cloneDeep } from 'lodash';\nimport { observer } from 'mobx-react';\n\nenum POINT_TYPE {\n  TL = 'topLeft',\n  TR = 'topRight',\n  BL = 'bottomLeft',\n  BR = 'bottomRight',\n  T = 'top',\n  B = 'bottom',\n  L = 'left',\n  R = 'right'\n}\n\ninterface Coords {\n  x: number;\n  y: number;\n}\n\nconst MIN_SIZE = {\n  width: 10,\n  height: 10\n}\n\n// 初始的指针角度（左上、上、右上、右）\nconst INIT_ANGLE = [0, 45, 90, 135]\n// 角度范围对应的指针样式\nconst ANGLE_TO_CURSOR = [\n  { start: 0, end: 23, cursor: 'nwse-resize' },\n  { start: 338, end: 360, cursor: 'nwse-resize' },\n  { start: 23, end: 68, cursor: 'ns-resize' },\n  { start: 68, end: 113, cursor: 'nesw-resize' },\n  { start: 113, end: 158, cursor: 'ew-resize' },\n  { start: 158, end: 203, cursor: 'nwse-resize' },\n  { start: 203, end: 248, cursor: 'ns-resize' },\n  { start: 248, end: 293, cursor: 'nesw-resize' },\n  { start: 293, end: 338, cursor: 'ew-resize' }\n]\n\n// 编辑框\nexport default observer(({ info }: { info: Layer; }) => {\n  const scale = useContext(ScaleContext)\n\n  const { layers, setLayer, isMoving, setIsMoving } = templateStore\n\n  // 鼠标样式\n  const [cursors, setCursors] = useState<string[]>([])\n\n  // 调整大小 无旋转\n  const resizeNormal = (e: MouseEvent<HTMLElement>, point: POINT_TYPE) => {\n    const idx = layers.findIndex(layer => layer.id === info.id)\n    // const layer = cloneDeep(layers[idx])\n\n    if (idx > -1) {\n      new MouseEvents(e, (payload) => {\n        const layer = cloneDeep(layers[idx])\n\n        const { x, y } = payload.diff\n        const whRatio = layer.width / layer.height\n        let { x: newX, y: newY } = layer.position\n        let { width: newWidth, height: newHeight } = layer\n        switch (point) {\n          case POINT_TYPE.TL: {\n            const height = layer.height\n            newWidth -= x / scale\n            newX += x / scale\n            newHeight = newWidth / whRatio\n            newY -= newHeight - height\n            break\n          }\n          case POINT_TYPE.TR: {\n            const height = layer.height\n            newWidth += x / scale\n            newHeight = newWidth / whRatio\n            newY -= newHeight - height\n            break\n          }\n          case POINT_TYPE.BL: {\n            newWidth -= x / scale\n            newX += x / scale\n            newHeight = newWidth / whRatio\n            break\n          }\n          case POINT_TYPE.BR: {\n            newWidth += x / scale\n            newHeight = newWidth / whRatio\n            break\n          }\n          case POINT_TYPE.T: {\n            newHeight -= y / scale\n            newY += y / scale\n            break\n          }\n          case POINT_TYPE.B: {\n            newHeight += y / scale\n            break\n          }\n          case POINT_TYPE.L: {\n            newWidth -= x / scale\n            newX += x / scale\n            break\n          }\n          case POINT_TYPE.R: {\n            newWidth += x / scale\n            break\n          }\n        }\n\n        if ((newWidth > MIN_SIZE.width && newHeight > MIN_SIZE.height) || newWidth > layer.width || newHeight > layer.height) {\n          if (layer.type === 'text') {\n            if (layer.height !== newHeight && layer.scale) {\n              layer.scale *= newHeight / layer.height\n            }\n          }\n\n          layer.width = newWidth\n          layer.height = newHeight\n          layer.position.x = newX\n          layer.position.y = newY\n        }\n\n        setLayer(layer)\n        setIsMoving(true)\n      }, () => {\n        setIsMoving(false)\n      })\n    }\n  }\n\n  // 调整大小 有旋转\n  const resizeWithRotate = (e: MouseEvent<HTMLElement>, point: POINT_TYPE) => {\n    // 图层相对于画布左上角的中心点\n    const center = {\n      x: (info.position.x + info.width / 2) * scale,\n      y: (info.position.y + info.height / 2) * scale\n    }\n\n    // 获取边框圆点中心点\n    const pointRect = (e.target as HTMLElement)?.getBoundingClientRect()\n    const canvasRect = (document.querySelector('#layerControl') as HTMLElement)?.getBoundingClientRect()\n    const pointCenter = {\n      x: pointRect.left - Number(canvasRect.left) + pointRect.width / 2,\n      y: pointRect.top - Number(canvasRect.top) + pointRect.height / 2\n    }\n\n    // 获取对称点\n    const symmetricPoint = {\n      x: center.x - (pointCenter.x - center.x),\n      y: center.y - (pointCenter.y - center.y)\n    }\n\n    const whRatio = info.width / info.height\n    const idx = layers.findIndex(layer => layer.id === info.id)\n    // const layer = cloneDeep(layers[idx])\n\n    new MouseEvents(e, ({ curCoords }: { curCoords: Coords }) => {\n      const layer = cloneDeep(layers[idx])\n\n      const curPoint = {\n        x: curCoords.x - Number(canvasRect.left),\n        y: curCoords.y - Number(canvasRect.top)\n      }\n\n      const oldHeight = layer.height\n\n      switch (point) {\n        case POINT_TYPE.TL: {\n          // 根据鼠标当前位置和对称点获取最新中心点\n          let newCenterPoint = getCenterCoords(curPoint, symmetricPoint)\n          // 获取旋转前的左上角坐标\n          let newOriginCurPoint = calcRotatedCoords(curPoint, newCenterPoint, -info.rotate)\n          // 获取旋转前的对称点坐标\n          let newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          let newWidth = newOriginSymmetricPoint.x - newOriginCurPoint.x\n          let newHeight = newOriginSymmetricPoint.y - newOriginCurPoint.y\n  \n          // 获取等比缩放计算后的坐标\n          if (newWidth / newHeight > whRatio) {\n            newOriginCurPoint.x += Math.abs(newWidth - newHeight * whRatio)\n          } else {\n            newOriginCurPoint.y += Math.abs(newHeight - newWidth / whRatio)\n          }\n  \n          // 由于现在求的未旋转前的坐标是以没按比例缩减宽高前的坐标来计算的\n          // 所以缩减宽高后，需要按照原来的中心点旋转回去，获得缩减宽高并旋转后对应的坐标\n          // 然后以这个坐标和对称点获得新的中心点，并重新计算未旋转前的坐标\n          const latestOriginCurPoint = calcRotatedCoords(newOriginCurPoint, newCenterPoint, info.rotate)\n          newCenterPoint = getCenterCoords(latestOriginCurPoint, symmetricPoint)\n          newOriginCurPoint = calcRotatedCoords(latestOriginCurPoint, newCenterPoint, -info.rotate)\n          newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          newWidth = newOriginSymmetricPoint.x - newOriginCurPoint.x\n          newHeight = newOriginSymmetricPoint.y - newOriginCurPoint.y\n  \n          if (newWidth / scale > MIN_SIZE.width && newHeight / scale > MIN_SIZE.height) {\n            layer.width = newWidth / scale\n            layer.height = newHeight / scale\n            layer.position.y = newOriginCurPoint.y / scale\n            layer.position.x = newOriginCurPoint.x / scale\n          }\n          break\n        }\n\n        case POINT_TYPE.TR: {\n          let newCenterPoint = getCenterCoords(curPoint, symmetricPoint)\n          // 获取旋转前的右上角坐标\n          let newOriginCurPoint = calcRotatedCoords(curPoint, newCenterPoint, -info.rotate)\n          let newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          let newWidth = newOriginCurPoint.x - newOriginSymmetricPoint.x\n          let newHeight = newOriginSymmetricPoint.y - newOriginCurPoint.y\n  \n          if (newWidth / newHeight > whRatio) {\n            newOriginCurPoint.x -= Math.abs(newWidth - newHeight * whRatio)\n          } else {\n            newOriginCurPoint.y += Math.abs(newHeight - newWidth / whRatio)\n          }\n  \n          const latestOriginCurPoint = calcRotatedCoords(newOriginCurPoint, newCenterPoint, info.rotate)\n          newCenterPoint = getCenterCoords(latestOriginCurPoint, symmetricPoint)\n          newOriginCurPoint = calcRotatedCoords(latestOriginCurPoint, newCenterPoint, -info.rotate)\n          newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          newWidth = newOriginCurPoint.x - newOriginSymmetricPoint.x\n          newHeight = newOriginSymmetricPoint.y - newOriginCurPoint.y\n  \n          if (newWidth / scale > MIN_SIZE.width && newHeight / scale > MIN_SIZE.height) {\n            layer.width = newWidth / scale\n            layer.height = newHeight / scale\n            layer.position.y = newOriginCurPoint.y / scale\n            layer.position.x = newOriginSymmetricPoint.x / scale\n          }\n          break\n        }\n  \n        case POINT_TYPE.BR: {\n          let newCenterPoint = getCenterCoords(curPoint, symmetricPoint)\n          // 获取旋转前的右下角坐标\n          let newOriginCurPoint = calcRotatedCoords(curPoint, newCenterPoint, -info.rotate)\n          let newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          let newWidth = newOriginCurPoint.x - newOriginSymmetricPoint.x\n          let newHeight = newOriginCurPoint.y - newOriginSymmetricPoint.y\n  \n          if (newWidth / newHeight > whRatio) {\n            newOriginCurPoint.x -= Math.abs(newWidth - newHeight * whRatio)\n          } else {\n            newOriginCurPoint.y -= Math.abs(newHeight - newWidth / whRatio)\n          }\n  \n          const latestOriginCurPoint = calcRotatedCoords(newOriginCurPoint, newCenterPoint, info.rotate)\n          newCenterPoint = getCenterCoords(latestOriginCurPoint, symmetricPoint)\n          newOriginCurPoint = calcRotatedCoords(latestOriginCurPoint, newCenterPoint, -info.rotate)\n          newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          newWidth = newOriginCurPoint.x - newOriginSymmetricPoint.x\n          newHeight = newOriginCurPoint.y - newOriginSymmetricPoint.y\n  \n          if (newWidth / scale > MIN_SIZE.width && newHeight / scale > MIN_SIZE.height) {\n            layer.width = newWidth / scale\n            layer.height = newHeight / scale\n            layer.position.y = newOriginSymmetricPoint.y / scale\n            layer.position.x = newOriginSymmetricPoint.x / scale\n          }\n          break\n        }\n  \n        case POINT_TYPE.BL: {\n          let newCenterPoint = getCenterCoords(curPoint, symmetricPoint)\n          // 获取旋转前的左下角坐标\n          let newOriginCurPoint = calcRotatedCoords(curPoint, newCenterPoint, -info.rotate)\n          let newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          let newWidth = newOriginSymmetricPoint.x - newOriginCurPoint.x\n          let newHeight = newOriginCurPoint.y - newOriginSymmetricPoint.y\n  \n          if (newWidth / newHeight > whRatio) {\n            newOriginCurPoint.x += Math.abs(newWidth - newHeight * whRatio)\n          } else {\n            newOriginCurPoint.y -= Math.abs(newHeight - newWidth / whRatio)\n          }\n  \n          const latestOriginCurPoint = calcRotatedCoords(newOriginCurPoint, newCenterPoint, info.rotate)\n          newCenterPoint = getCenterCoords(latestOriginCurPoint, symmetricPoint)\n          newOriginCurPoint = calcRotatedCoords(latestOriginCurPoint, newCenterPoint, -info.rotate)\n          newOriginSymmetricPoint = calcRotatedCoords(symmetricPoint, newCenterPoint, -info.rotate)\n  \n          newWidth = newOriginSymmetricPoint.x - newOriginCurPoint.x\n          newHeight = newOriginCurPoint.y - newOriginSymmetricPoint.y\n  \n          if (newWidth / scale > MIN_SIZE.width && newHeight / scale > MIN_SIZE.height) {\n            layer.width = newWidth / scale\n            layer.height = newHeight / scale\n            layer.position.y = newOriginSymmetricPoint.y / scale\n            layer.position.x = newOriginCurPoint.x / scale\n          }\n          break\n        }\n  \n        case POINT_TYPE.T:\n        case POINT_TYPE.B: {\n          // 由于用户拉伸时是以任意角度拉伸的，所以在求得旋转前的坐标时，只取 y 坐标（这里的 x 坐标可能是任意值），x 坐标用 pointCenter 的。\n          // 这个中心点（第二个参数）用 pointCenter, center, symmetricPoint 都可以，只要他们在一条直线上就行\n          const newOriginCurPoint = calcRotatedCoords(curPoint, pointCenter, -info.rotate)\n  \n          // 算出旋转前 y 坐标，再用 initCurPoint 的 x 坐标，重新计算它们旋转后对应的坐标\n          const latestCurPoint = calcRotatedCoords({\n            x: pointCenter.x,\n            y: newOriginCurPoint.y\n          }, pointCenter, info.rotate)\n  \n          // 用旋转后的坐标和对称点算出新的高度（勾股定理）\n          const newHeight = Math.sqrt((latestCurPoint.x - symmetricPoint.x) ** 2 + (latestCurPoint.y - symmetricPoint.y) ** 2)\n  \n          const newCenter = {\n            x: latestCurPoint.x - (latestCurPoint.x - symmetricPoint.x) / 2,\n            y: latestCurPoint.y + (symmetricPoint.y - latestCurPoint.y) / 2\n          }\n  \n          // 是否反向拉伸了\n          let isReverse = false\n          const angle = (info.rotate + 360) % 360\n          // 禁止反向拉伸\n          if (point === POINT_TYPE.T) {\n            if ((angle >= 0 && angle <= 90) || (angle >= 270 && angle <= 360)) {\n              if (latestCurPoint.y >= symmetricPoint.y) {\n                isReverse = true\n              }\n            } else if (latestCurPoint.y <= symmetricPoint.y) {\n              isReverse = true\n            }\n          }\n          if (point === POINT_TYPE.B) {\n            if (angle >= 90 && angle <= 270) {\n              if (latestCurPoint.y >= symmetricPoint.y) {\n                isReverse = true\n              }\n            } else if (latestCurPoint.y <= symmetricPoint.y) {\n              isReverse = true\n            }\n          }\n  \n          if (newHeight / scale > MIN_SIZE.height && !isReverse) {\n            layer.height = newHeight / scale\n            layer.position.y = (newCenter.y - (newHeight / 2)) / scale\n            layer.position.x = newCenter.x / scale - (layer.width / 2)\n          }\n          break\n        }\n  \n        case POINT_TYPE.L:\n        case POINT_TYPE.R: {\n          const newOriginCurPoint = calcRotatedCoords(curPoint, pointCenter, -info.rotate)\n  \n          const latestCurPoint = calcRotatedCoords({\n            x: newOriginCurPoint.x,\n            y: pointCenter.y\n          }, pointCenter, info.rotate)\n  \n          const newWidth = Math.sqrt((latestCurPoint.x - symmetricPoint.x) ** 2 + (latestCurPoint.y - symmetricPoint.y) ** 2)\n  \n          const newCenter = {\n            x: latestCurPoint.x - (latestCurPoint.x - symmetricPoint.x) / 2,\n            y: latestCurPoint.y + (symmetricPoint.y - latestCurPoint.y) / 2\n          }\n  \n          // 是否反向拉伸了\n          let isReverse = false\n          const angle = (info.rotate + 360) % 360\n          // 禁止反向拉伸\n          if (point === POINT_TYPE.L) {\n            if ((angle >= 0 && angle <= 90) || (angle >= 270 && angle <= 360)) {\n              if (latestCurPoint.x >= symmetricPoint.x) {\n                isReverse = true\n              }\n            } else if (latestCurPoint.x <= symmetricPoint.x) {\n              isReverse = true\n            }\n          }\n          if (point === POINT_TYPE.R) {\n            if (angle >= 90 && angle <= 270) {\n              if (latestCurPoint.x >= symmetricPoint.x) {\n                isReverse = true\n              }\n            } else if (latestCurPoint.x <= symmetricPoint.x) {\n              isReverse = true\n            }\n          }\n  \n          if (newWidth / scale > MIN_SIZE.width && !isReverse) {\n            layer.width = newWidth / scale\n            layer.position.y = newCenter.y / scale - (layer.height / 2)\n            layer.position.x = (newCenter.x - (newWidth / 2)) / scale\n          }\n          break\n        }\n      }\n\n      if (layer.type === 'text') {\n        if (layer.height !== oldHeight && layer.scale) {\n          layer.scale *= layer.height / oldHeight\n        }\n      }\n\n      setLayer(layer)\n      setIsMoving(true)\n    }, () => {\n      setIsMoving(false)\n    })\n  }\n\n  // 调整大小\n  const resize = (e: MouseEvent<HTMLElement>, point: POINT_TYPE) => {\n    e.stopPropagation()\n    if (info.rotate === 0) {\n      resizeNormal(e, point)\n    } else {\n      resizeWithRotate(e, point)\n    }\n  }\n\n  // 旋转\n  const rotate = (e: MouseEvent<HTMLElement>) => {\n    e.stopPropagation()\n    const borderEl = (e.target as HTMLElement).closest('.border-control')\n    if (borderEl) {\n      const rect = borderEl.getBoundingClientRect()\n      const rotateCenterPoint = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      }\n      new MouseEvents(e, ({ curCoords }: { curCoords: Coords }) => {\n        const offsetY = curCoords.y - rotateCenterPoint.y\n        const offsetX = curCoords.x - rotateCenterPoint.x\n        // 当前距离x轴的角度(x轴起逆时针方向至该边)\n        const angle = Math.atan2(offsetY, offsetX) * 180 / Math.PI\n\n        const idx = layers.findIndex(layer => layer.id === info.id)\n        const layer = cloneDeep(layers[idx])\n        layer.rotate = (angle - 90 + 360) % 360\n\n        setLayer(layer)\n        setIsMoving(true)\n      }, () => {\n        setIsMoving(false)\n      })\n    }\n  }\n\n  // 计算8个圆点的指针样式，按顺序分别为 左上（右下）、上（下）、右上（左下）、右（左）\n  const calcCursors = useCallback(() => {\n    let angle = info.rotate\n    if (angle < 0) {\n      angle += 360\n    }\n    const cursors: string[] = []\n    INIT_ANGLE.forEach((a) => {\n      const newAngle = (a + angle) % 360\n      const item = ANGLE_TO_CURSOR.find(i => i.start <= newAngle && i.end >= newAngle)\n      if (item) {\n        cursors.push(item.cursor)\n      }\n    })\n    setCursors(cursors)\n  }, [info.rotate])\n\n  useEffect(() => {\n    calcCursors()\n  }, [calcCursors])\n\n  return <BorderEl \n    style={{\n      width: info.width * scale,\n      height: info.height * scale,\n      transform: `translate(${info.position.x * scale}px, ${info.position.y * scale}px) rotate(${info.rotate}deg)`\n    }}\n    className={['border-control', isMoving ? 'moving' : ''].join(' ')}\n  >\n    <PointBR style={{ cursor: cursors[0] }} onMouseDown={e => resize(e, POINT_TYPE.BR)} />\n    {info.width * scale > 30 && info.height * scale > 30 && <>\n        <PointTL style={{ cursor: cursors[0] }} onMouseDown={e => resize(e, POINT_TYPE.TL)} />\n        <PointTR style={{ cursor: cursors[2] }} onMouseDown={e => resize(e, POINT_TYPE.TR)} />\n        <PointBL style={{ cursor: cursors[2] }} onMouseDown={e => resize(e, POINT_TYPE.BL)} />\n        <PointL style={{ cursor: cursors[3] }} onMouseDown={e => resize(e, POINT_TYPE.L)} />\n        <PointR style={{ cursor: cursors[3] }} onMouseDown={e => resize(e, POINT_TYPE.R)} />\n        { info.type !== 'text' && <PointT style={{ cursor: cursors[1] }} onMouseDown={e => resize(e, POINT_TYPE.T)} /> }\n        { info.type !== 'text' && <PointB style={{ cursor: cursors[1] }} onMouseDown={e => resize(e, POINT_TYPE.B)} /> }\n      </>\n    }\n    <RotateIcon className='rotate-point' icon={rotateIcon} onMouseDown={rotate} />\n  </BorderEl>\n})\n\nconst BorderEl = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n\n  &.moving .rotate-point {\n    opacity: 0;\n  }\n\n  &.moving span {\n    opacity: 0;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: -1px;\n    left: -1px;\n    right: -1px;\n    bottom: -1px;\n    border: 2px solid #00c4cc;\n  }\n`\n\nconst Point = styled.span`\n  position: absolute;\n  display: block;\n  background: transparent;\n  z-index: 1;\n  pointer-events: auto;\n  width: 18px;\n  height: 18px;\n  user-select: none;\n  transition: opacity 200ms;\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    border-radius: 6px;\n    background: #fff;\n    box-shadow: 0 0 5px 1px rgb(57 76 96 / 15%), 0 0 0 1px rgb(53 71 90 / 20%);\n  }\n`\n\nconst PointTL = styled(Point)`\n  top: -9px;\n  left: -9px;\n  cursor: nwse-resize;\n`\n\nconst PointTR = styled(Point)`\n  top: -9px;\n  right: -9px;\n  cursor: nesw-resize;\n`\n\nconst PointBL = styled(Point)`\n  bottom: -9px;\n  left: -9px;\n  cursor: nesw-resize;\n`\n\nconst PointBR = styled(Point)`\n  bottom: -9px;\n  right: -9px;\n  cursor: nwse-resize;\n`\n\nconst PointT = styled(Point)`\n  width: calc(100% - 24px);\n  height: 12px;\n  top: -6px;\n  left: 12px;\n  cursor: ns-resize;\n\n  ::before {\n    width: 16px;\n    height: 4px;\n  }\n`\n\nconst PointB = styled(Point)`\n  width: calc(100% - 24px);\n  height: 12px;\n  bottom: -6px;\n  left: 12px;\n  cursor: ns-resize;\n\n  ::before {\n    width: 16px;\n    height: 4px;\n  }\n`\n\nconst PointL = styled(Point)`\n  width: 12px;\n  height: calc(100% - 24px);\n  top: 12px;\n  left: -6px;\n  cursor: ew-resize;\n\n  ::before {\n    width: 4px;\n    height: 16px;\n  }\n`\n\nconst PointR = styled(Point)`\n  width: 12px;\n  height: calc(100% - 24px);\n  top: 12px;\n  right: -6px;\n  cursor: ew-resize;\n\n  ::before {\n    width: 4px;\n    height: 16px;\n  }\n`\n\nconst RotateIcon = styled.div<{icon: string}>(\n  {\n    position: 'absolute',\n    left: '50%',\n    bottom: '-50px',\n    width: '20px',\n    height: '20px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transform: 'translate(-50%, -50%)',\n    pointerEvents: 'auto',\n    borderRadius: '50%',\n    boxShadow: '0 0 5px 1px rgb(57 76 96 / 15%), 0 0 0 1px rgb(57 76 96 / 15%)',\n    userSelect: 'none',\n    cursor: 'grab'\n  },\n  props => ({\n    background: `#fff url(${props.icon}) no-repeat center / 18px 18px`\n  })\n)","export default __webpack_public_path__ + \"static/media/rotate.a7cc796d.svg\";","import { useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Layer } from 'types';\nimport { ScaleContext } from 'store/context';\n\nexport default function HoverBorder ({ info }: { info: Layer; }) {\n  const scale = useContext(ScaleContext)\n\n  return <BorderEl \n    style={{\n      width: info.width * scale,\n      height: info.height * scale,\n      transform: `translate(${info.position.x * scale}px, ${info.position.y * scale}px) rotate(${info.rotate}deg)`\n    }}\n  />\n}\n\nconst BorderEl = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\npointer-events: none;\n\n&:after {\n  content: '';\n  position: absolute;\n  top: -1px;\n  left: -1px;\n  right: -1px;\n  bottom: -1px;\n  border: 2px solid #00c4cc;\n}\n`","import { MouseEvent as MouseEventType, useContext } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"@emotion/styled\";\nimport { Layer as LayerType } from 'types';\nimport { ScaleContext, BackgroundContext } from 'store/context';\nimport { MouseEvents } from 'utils/mouseEvent';\nimport { helpLine } from 'utils/helpLine'\nimport Border from \"./Border\";\nimport HoverBorder from \"./HoverBorder\";\nimport { templateStore } from 'store/template';\nimport { observer } from 'mobx-react';\nimport { cloneDeep } from \"lodash\";\n\n// 图层\nexport default observer(({ children, info }: { children: JSX.Element, info: LayerType }) => {\n  const scale = useContext(ScaleContext)\n  const { template, layers, setLayer, selectLayer, hoverLayer, isMoving, setIsMoving } = templateStore\n\n  // 设置背景选中状态\n  const { setIsSelectedBackground } = useContext(BackgroundContext)\n\n  // 辅助线\n  const { getRect: helpLineRect, init: initHelpLine, move: helpLinePipe } = helpLine()\n\n  // 更新图层位置\n  const updatePosition = ({ diff }: { diff: { x: number; y: number; } }) => {\n    const layer = cloneDeep(info)\n\n    const newPosition = helpLinePipe({\n      x: helpLineRect().x + diff.x / scale,\n      y: helpLineRect().y + diff.y / scale\n    })\n\n    layer.position = newPosition\n\n    setLayer(layer)\n    setIsMoving(true)\n  }\n\n  // 隐藏辅助线\n  const hideLine = () => {\n    const vLineEl = document.querySelector('#verticalLine') as HTMLElement\n    vLineEl.style.visibility = 'hidden'\n    const hLineEl = document.querySelector('#horizontalLine') as HTMLElement\n    hLineEl.style.visibility = 'hidden'\n    setIsMoving(false)\n  }\n\n  // 选中图层\n  const onSelectLayer = (e: MouseEventType<HTMLDivElement>) => {\n    e.stopPropagation()\n    if (info.isEditing) return\n    selectLayer(info.id)\n    setIsSelectedBackground(false)\n    // 初始化拖拽事件\n    new MouseEvents(e, updatePosition, hideLine)\n    // 初始化辅助线数据\n    initHelpLine({\n      ...info.position,\n      width: info.width,\n      height: info.height,\n      rotate: info.rotate\n    }, info.id, layers, scale, { ...template.global })\n  }\n\n  // 鼠标移入图层\n  const onLayerMouseEnter = (e: MouseEventType<HTMLDivElement>) => {\n    e.stopPropagation()\n    hoverLayer(info.id)\n  }\n\n  // 鼠标移出图层\n  const onLayerMouseOut = (e: MouseEventType<HTMLDivElement>) => {\n    e.stopPropagation()\n    hoverLayer()\n  }\n\n  return <LayerWrapper\n    style={{\n      width: info.width,\n      height: info.height,\n      transform: `translate(${info.position.x}px, ${info.position.y}px) rotate(${info.rotate}deg)`,\n      zIndex: info.zIndex\n    }}\n    onMouseDown={onSelectLayer}\n    onMouseEnter={onLayerMouseEnter}\n    onMouseOut={onLayerMouseOut}\n    className={[isMoving ? 'moving' : '', info.isEditing ? 'edit' : ''].join(' ')}\n  >\n    {/* 图层内容 */}\n    <LayerContent style={{transform: `scale(${info.reverse?.x || 1}, ${info.reverse?.y || 1})`}}>\n      { children }\n    </LayerContent>\n    {/* 拖拽边框 */}\n    {info.isSelected && <TransportBorder>\n      <Border info={info} />\n    </TransportBorder>}\n    {/* 鼠标移入边框 */}\n    {!info.isSelected && !isMoving && info.isHover && <TransportBorder>\n      <HoverBorder info={info} />\n    </TransportBorder>}\n  </LayerWrapper>\n})\n\n// 传送门\nfunction TransportBorder ({ children }: { children: JSX.Element }) {\n  return createPortal(\n    children,\n    document.querySelector('#layerControl') as HTMLDivElement\n  )\n}\n\nconst LayerWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: auto;\n  user-select: none;\n  cursor: default;\n\n  &.moving {\n    cursor: all-scroll;\n  }\n\n  &.edit {\n    cursor: text;\n  }\n`\n\nconst LayerContent = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 250ms;\n`","import { Layer } from 'types';\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  rotate: number;\n}\n\ninterface RealRect extends Omit<Rect, 'rotate'> {}\n\ninterface Size {\n  width: number;\n  height: number;\n}\n\ninterface Coord {\n  x: number;\n  y: number;\n}\n\nexport function helpLine () {\n  // 当前图层位置信息\n  let rect: Rect = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    rotate: 0\n  }\n\n  // 当前图层实际DOM的位置信息\n  let realRect: RealRect = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  // 当前图层ID\n  let layerId = ''\n  // 所有的图层数据\n  let allLayers: Layer[] = []\n  // 缩放值\n  let scale = 1\n  // 画布尺寸\n  let canvasSize: Size = {\n    width: 0,\n    height: 0\n  }\n  // 吸附距离\n  let diff = 4\n\n  const vLineEl = document.querySelector('#verticalLine') as HTMLElement\n  const hLineEl = document.querySelector('#horizontalLine') as HTMLElement\n  let vType: 0 | 1 | 2 = 0 // 垂直线位置-0左1中2右\n  let hType: 0 | 1 | 2 = 0 // 水平线位置-0上1中2下\n\n  // 初始化数据\n  const init = (data: Rect, id: string, layers: Layer[], scl: number, size: Size) => {\n    rect = data\n    layerId = id\n    allLayers = layers\n    scale = scl\n    diff = 4 / scale\n    canvasSize = size\n\n    // 获取旋转后的真实元素位置信息\n    const rad = rect.rotate * Math.PI / 180\n    const newWidth = Math.abs(rect.width * Math.cos(rad)) + Math.abs(rect.height * Math.sin(rad))\n    const newHeight = Math.abs(rect.height * Math.cos(rad)) + Math.abs(rect.width * Math.sin(rad))\n    realRect.width = newWidth\n    realRect.height = newHeight\n    realRect.x = rect.x + (rect.width - newWidth) / 2\n    realRect.y = rect.y - (newHeight - rect.height) / 2\n  }\n\n  // 移动吸附\n  const move = ({ x, y }: Coord): Coord => {\n    rect.x = x\n    rect.y = y\n\n    const res: Coord = {\n      x: rect.x,\n      y: rect.y\n    }\n\n    // 更新真实元素位置信息\n    realRect.x = rect.x + (rect.width - realRect.width) / 2\n    realRect.y = rect.y - (realRect.height - rect.height) / 2\n\n    // 遍历所有图层，与当前图层两两对比\n    allLayers.forEach(l => {\n      // 获取其他图层真实的元素定位\n      const rad = l.rotate * Math.PI / 180\n      const newWidth = Math.abs(l.width * Math.cos(rad)) + Math.abs(l.height * Math.sin(rad))\n      const newHeight = Math.abs(l.height * Math.cos(rad)) + Math.abs(l.width * Math.sin(rad))\n      const newX = l.position.x + (l.width - newWidth) / 2\n      const newY = l.position.y - (newHeight - l.height) / 2\n\n      if (l.id !== layerId) {\n        // x 垂直线\n        vLineHandle(newX + newWidth, res) // 对象图层右\n        vLineHandle(newX + newWidth / 2, res) // 对象图层中\n        vLineHandle(newX, res) // 对象图层左\n\n        // y 水平线\n        hLineHandle(newY + newHeight, res) // 对象图层下\n        hLineHandle(newY + newHeight / 2, res) // 对象图层中\n        hLineHandle(newY, res) // 对象图层上\n      }\n    })\n\n    // 与画布对齐\n    // x 垂直线\n    vLineHandle(canvasSize.width, res) // 画布右\n    vLineHandle(canvasSize.width / 2, res) // 画布中\n    vLineHandle(0, res) // 画布左\n    // y 水平线\n    hLineHandle(canvasSize.height, res) // 画布下\n    hLineHandle(canvasSize.height / 2, res) // 画布中\n    hLineHandle(0, res) // 画布上\n\n    // 渲染辅助线DOM\n    renderLine(res)\n\n    return res\n  }\n\n  // 垂直线\n  const vLineHandle = (targetX: number, res: Coord) => {\n    // 右\n    if (Math.abs(targetX - (realRect.x + realRect.width)) <= diff) {\n      res.x = targetX - rect.width \n      res.x += (rect.width - realRect.width) / 2\n      vType = 2\n    }\n    // 中\n    if (Math.abs(targetX - (realRect.x + realRect.width / 2)) <= diff) {\n      res.x = targetX - rect.width / 2\n      vType = 1\n    }\n    // 左\n    if (Math.abs(targetX - realRect.x) <= diff) {\n      res.x = targetX\n      res.x -= (rect.width - realRect.width) / 2\n      vType = 0\n    }\n  }\n\n  // 水平线\n  const hLineHandle = (targetY: number, res: Coord) => {\n    // 下\n    if (Math.abs(targetY - (realRect.y + realRect.height)) <= diff) {\n      res.y = targetY - rect.height\n      res.y -= (realRect.height - rect.height) / 2\n      hType = 2\n    }\n    // 中\n    if (Math.abs(targetY - (realRect.y + realRect.height / 2)) <= diff) {\n      res.y = targetY - rect.height / 2\n      hType = 1\n    }\n    // 上\n    if (Math.abs(targetY - realRect.y) <= diff) {\n      res.y = targetY\n      res.y += (realRect.height - rect.height) / 2\n      hType = 0\n    }\n  }\n\n  // 渲染辅助线DOM\n  const renderLine = (res: Coord) => {\n    if (vLineEl && hLineEl) {\n      // TODO: 当前位置刚好在线上，条件不满足\n      if (res.x !== rect.x) {\n        let vLine = 0\n        if (vType === 0) vLine = res.x + (rect.width - realRect.width) / 2\n        if (vType === 1) vLine = res.x + rect.width / 2\n        if (vType === 2) vLine = res.x + (rect.width - realRect.width) / 2 + realRect.width\n        vLineEl.style.transform = `translateX(${vLine * scale}px)`\n        vLineEl.style.visibility = 'visible'\n      } else {\n        vLineEl.style.visibility = 'hidden'\n      }\n      if (res.y !== rect.y) {\n        let hLine = 0\n        if (hType === 0) hLine = res.y - (realRect.height - rect.height) / 2\n        if (hType === 1) hLine = res.y + rect.height / 2\n        if (hType === 2) hLine = res.y - (realRect.height - rect.height) / 2 + realRect.height\n        hLineEl.style.transform = `translateY(${hLine * scale}px)`\n        hLineEl.style.visibility = 'visible'\n      } else {\n        hLineEl.style.visibility = 'hidden'\n      }\n    }\n  }\n\n  const getRect = () => {\n    return rect\n  }\n\n  return {\n    getRect,\n    init,\n    move\n  }\n}","import 'quill/dist/quill.core.css';\nimport 'quill/dist/quill.snow.css';\nimport Quill from 'quill';\nimport { observer } from 'mobx-react';\nimport styled from \"@emotion/styled\";\nimport { FontStyle } from 'types';\nimport { Layer } from 'types';\nimport { useCallback, useEffect, useRef, useState, useContext } from 'react';\nimport { templateStore } from 'store/template';\nimport { cloneDeep } from 'lodash';\nimport { ScaleContext } from 'store/context';\n\nexport default observer(({ layer }: { layer: Layer }) => {\n  const editorRef = useRef<HTMLDivElement>(null)\n\n  const { editTextLayer, setLayer, needUpdateLayerHeight, setNeedUpdateLayerHeight, isMoving } = templateStore\n  const scale = useContext(ScaleContext)\n\n  // quill实例\n  let [editor, setEditor] = useState<Quill | null>(null)\n\n  // 画布的DOM信息\n  const canvasRect = (document.querySelector('#textControl') as HTMLElement)?.getBoundingClientRect()\n\n  // 文本内容变化\n  const onTextChange = useCallback(() => {\n    if (editor) {\n      const _layer = cloneDeep(layer)\n      const text = editor.getText()\n      _layer.source.content = text\n\n      if (editorRef.current) {\n        // 文本换行了，更新图层最新高度和位置\n        const rect = editorRef.current.getBoundingClientRect()\n        const rad = (layer.rotate % 180) * Math.PI / 180\n        const newHeight = Math.abs((rect.height - layer.width * scale * Math.sin(rad)) / Math.cos(rad))\n\n        // 高度不一致表示换行/减行\n        if (newHeight / scale !== layer.height) {\n          _layer.height = newHeight / scale\n\n          const center = {\n            x: rect.left + rect.width / 2 - canvasRect.left,\n            y: rect.top + rect.height / 2 - canvasRect.top\n          }\n          const newX = center.x / scale - (layer.width / 2)\n          const newY = (center.y - (newHeight / 2)) / scale\n\n          _layer.position = {\n            x: newX,\n            y: newY\n          }\n        }\n      }\n      setLayer(_layer)\n    }\n  }, [editor, layer, setLayer, scale, canvasRect])\n\n  // 字体大小改变了，高度也要更新\n  useEffect(() => {\n    if (needUpdateLayerHeight && editorRef.current) {\n      const _layer = cloneDeep(layer)\n      const rect = editorRef.current.getBoundingClientRect()\n      const rad = (layer.rotate % 180) * Math.PI / 180\n      const newHeight = Math.abs((rect.height - layer.width * scale * Math.sin(rad)) / Math.cos(rad))\n\n      // 高度不一致表示换行/减行\n      if (newHeight / scale !== layer.height) {\n        _layer.height = newHeight / scale\n\n        const center = {\n          x: rect.left + rect.width / 2 - canvasRect.left,\n          y: rect.top + rect.height / 2 - canvasRect.top\n        }\n        const newX = center.x / scale - (layer.width / 2)\n        const newY = (center.y - (newHeight / 2)) / scale\n\n        _layer.position = {\n          x: newX,\n          y: newY\n        }\n        setLayer(_layer)\n      }\n      setNeedUpdateLayerHeight(false)\n    }\n  }, [canvasRect, layer, needUpdateLayerHeight, scale, setLayer, setNeedUpdateLayerHeight])\n\n  // 拖拽改变文本框宽度时，更新图层最新高度\n  // TODO: 位置会偏移\n  useEffect(() => {\n    // isMoving表示拖拽\n    if (isMoving && editorRef.current) {\n      const rect = editorRef.current.getBoundingClientRect()\n      const rad = (layer.rotate % 180) * Math.PI / 180\n      const newHeight = Math.abs((rect.height - layer.width * scale * Math.sin(rad)) / Math.cos(rad))\n\n      // 高度不一致表示换行/减行\n      if (Math.abs(newHeight / scale - layer.height) > 1) {\n        const _layer = cloneDeep(layer)\n        _layer.height = newHeight / scale\n        setLayer(_layer)\n      }\n    }\n  }, [layer, scale, isMoving, canvasRect, setLayer])\n\n  // 进入编辑状态\n  const onEditText = () => {\n    editTextLayer(layer.id)\n  }\n\n  // 初始化quill实例\n  useEffect(() => {\n    if (editorRef.current && !editor) {\n      const instance = new Quill(editorRef.current)\n      setEditor(instance)\n    }\n  }, [editor])\n\n  // 设置文本内容\n  useEffect(() => {\n    if (editor && layer.source.content) {\n      editor.setText(layer.source.content)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor])\n\n  // 设置编辑状态\n  useEffect(() => {\n    if (editor) {\n      editor.enable(layer.isEditing)\n      layer.isEditing && editor.setSelection(0, 1000)\n    }\n  }, [editor, layer.isEditing])\n\n  useEffect(() => {\n    if (editor) {\n      editor.on('text-change', onTextChange)\n    }\n    return () => {\n      editor?.off('text-change', onTextChange)\n    }\n  }, [editor, onTextChange])\n\n  return <TextWrapper\n    style={{\n      transform: `scale(${layer.scale})`,\n      width: `${layer.width / (layer.scale || 1)}px`,\n      height: `${layer.height / (layer.scale || 1)}px`\n    }}\n  >\n    <Text\n      data={layer.style as FontStyle}\n      onDoubleClick={onEditText}\n    >\n      <Editor ref={editorRef} spellCheck=\"false\" />\n    </Text>\n  </TextWrapper>\n})\n\nconst TextWrapper = styled.div`\n  transform-origin: 0 0;\n`\n\nconst Text = styled.div<{data: FontStyle}>(\n  {},\n  props => ({\n    fontFamily: `\"${props.data.font}\"`,\n    fontSize: props.data.fontSize,\n    color: props.data.color,\n    lineHeight: props.data.lineHeight,\n    textAlign: props.data.textAlign,\n    fontWeight: props.data.fontWeight,\n    textDecorationLine: props.data.underline ? 'underline' : 'none'\n  })\n)\n\nconst Editor = styled.div`\n  font-family: inherit;\n  font-size: inherit;\n\n  .ql-editor {\n    padding: 0;\n    overflow: visible;\n    font-family: inherit;\n    line-height: inherit;\n    text-align: inherit;\n    white-space: break-spaces;\n    /* user-select: text; */\n    line-break: anywhere;\n\n    &>* {\n      cursor: inherit;\n    }\n  }\n`","import React, { useContext, MouseEvent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ScaleContext, BackgroundContext } from 'store/context';\nimport Layer from './layer/Layer';\nimport { LAYER_TYPE } from 'types'\nimport { templateStore } from 'store/template';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport TextEditor from './layer/TextEditor';\nimport { createPortal } from \"react-dom\";\n\ninterface Props {\n  width: number;\n  height: number;\n  scale: number;\n}\n\n// 画布\nexport default observer(() => {\n  const { template, resetSelectStatus, setLayerType } = templateStore\n  const { global, background } = template\n\n  const scale = useContext(ScaleContext)\n  const {isSelectedBackground, setIsSelectedBackground} = useContext<{\n    isSelectedBackground: boolean;\n    setIsSelectedBackground: React.Dispatch<React.SetStateAction<boolean>>\n  }>(BackgroundContext)\n\n  // 选中背景\n  const selectBackground = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation()\n    setIsSelectedBackground(true)\n    resetSelectStatus()\n    setLayerType(LAYER_TYPE.BACKGROUND)\n  }\n\n  return <Wrapper width={global.width} height={global.height} scale={scale}>\n    <CanvasContent width={global.width} height={global.height} scale={scale}>\n      <Background color={background.color} onClick={selectBackground} />\n      {\n        template.layers.map(layer => {\n          // 图片\n          if (layer.type === 'image') {\n            return <Layer key={layer.id} info={layer}>\n              <Image src={toJS(layer.source.imageUrl)} draggable=\"false\" />\n            </Layer>\n          }\n          // 文字\n          if (layer.type === 'text') {\n            return layer.isEditing ?\n            <TransportEditor key={layer.id}>\n              <Layer info={layer}>\n                <TextEditor layer={toJS(layer)} />\n              </Layer>\n            </TransportEditor>\n            :\n            <Layer key={layer.id} info={layer}>\n              <TextEditor layer={toJS(layer)} />\n            </Layer>\n          }\n          return <></>\n        })\n      }\n    </CanvasContent>\n    {/* 编辑框传送点 */}\n    <LayerControl id=\"layerControl\" width={global.width} height={global.height} scale={scale}>\n        {isSelectedBackground && <BackgroundBorder />}\n        {/* 垂直辅助线 */}\n        <VLine id=\"verticalLine\" />\n        {/* 水平辅助线 */}\n        <HLine id=\"horizontalLine\" />\n    </LayerControl>\n    {/* 点前编辑的文本传送点 */}\n    <TextControl id=\"textControl\" width={global.width} height={global.height} scale={scale} />\n  </Wrapper>\n})\n\n// 传送门\nfunction TransportEditor ({ children }: { children: JSX.Element }) {\n  return createPortal(\n    children,\n    document.querySelector('#textControl') as HTMLDivElement\n  )\n}\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n`\n\nconst Background = styled.div<{ color: string; }>(\n  {\n    position: 'relative',\n    zIndex: -1,\n    width: '100%',\n    height: '100%'\n  },\n  props => ({\n    backgroundColor: props.color\n  })\n)\n\nconst Wrapper = styled.div<Props>(\n  {\n    flex: 'none',\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 'auto',\n    pointerEvents: 'none'\n  },\n  props => ({\n    width: props.width * props.scale + 100,\n    height: props.height * props.scale + 100\n  })\n)\n\nconst CanvasContent = styled.div<Props>(\n  {\n    flex: 'none',\n    position: 'relative',\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    userSelect: 'none',\n    pointerEvents: 'auto'\n  },\n  props => ({\n    width: props.width,\n    height: props.height,\n    transform: `scale(${props.scale})`\n  })\n)\n\nconst TextControl = styled(CanvasContent)`\n  position: absolute;\n  top: 50;\n  left: 50;\n  z-index: 1;\n  pointer-events: none;\n  overflow: visible;\n  background-color: transparent;\n`\n\nconst LayerControl = styled.div<Props>(\n  {\n    position: 'absolute',\n    top: 50,\n    left: 50,\n    zIndex: 2,\n    pointerEvents: 'none'\n  },\n  props => ({\n    width: props.width * props.scale,\n    height: props.height * props.scale\n  })\n)\n\nconst BackgroundBorder = styled.div`\n  position: absolute;\n  top: -1px;\n  left: -1px;\n  right: -1px;\n  bottom: -1px;\n  border: 2px solid #00c4cc;\n  background: transparent;\n  pointer-events: none;\n`\n\nconst VLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 0;\n  height: 100%;\n  border-left: 1px dashed #c228ff;\n  visibility: hidden;\n  z-index: 2;\n`\n\nconst HLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 0;\n  border-top: 1px dashed #c228ff;\n  visibility: hidden;\n  z-index: 2;\n`","\n// 预设字体列表\nexport const FONT_LIST: Array<{\n  name: string;\n  value: string\n}> = [\n  {\n    name: '宋体',\n    value: 'SimSun'\n  },\n  {\n    name: '黑体',\n    value: 'SimHei'\n  },\n  {\n    name: '微软雅黑',\n    value: 'Microsoft Yahei'\n  },\n  {\n    name: '楷体',\n    value: 'KaiTi'\n  },\n  {\n    name: '华文楷体',\n    value: 'STKaiti'\n  },\n  {\n    name: '翩翩体-简',\n    value: 'Hanzipen SC'\n  },\n  {\n    name: '娃娃体-简',\n    value: 'Wawati SC'\n  },\n  {\n    name: '圆体-简',\n    value: 'Yuanti SC'\n  },\n  {\n    name: '兰亭黑-简',\n    value: 'Lantinghei SC'\n  }\n]\n\n// 字体大小\nexport const FONTSIZE_LIST = [6,8,10,12,14,16,18,20,22,24,28,32,36,42,48,56,64,72,80,88,96,104,120,144]","import styled from \"@emotion/styled\";\nimport { observer } from 'mobx-react';\nimport { templateStore } from 'store/template'\nimport { LAYER_TYPE, Align } from 'types'\nimport { Popover, Select, Dropdown, Menu, Slider } from 'antd';\nimport { DeleteOutlined, AlignLeftOutlined, AlignCenterOutlined, AlignRightOutlined, SwapOutlined, BoldOutlined, UnderlineOutlined } from '@ant-design/icons';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport { cloneDeep } from \"lodash\";\nimport { FONT_LIST, FONTSIZE_LIST } from 'utils/const'\n\nconst { Option } = Select;\n\nexport default observer(() => {\n  const {\n    template,\n    layerType,\n    layers,\n    setLayerType,\n    setLayer,\n    setLayers,\n    setLayerLevel,\n    removeLayer,\n    setBackgroundColor,\n    setNeedUpdateLayerHeight\n  } = templateStore\n\n  const activeLayer = layers.find(l => l.isSelected)\n  const layerScale = activeLayer?.scale || 1\n\n  // 当前颜色\n  let color = ''\n  if (layerType === LAYER_TYPE.TEXT) {\n    color = activeLayer?.style?.color || ''\n  } else if (layerType === LAYER_TYPE.BACKGROUND) {\n    color = template.background.color\n  }\n\n  // 当前字体\n  const font = activeLayer?.style?.font || ''\n  // 当前字体\n  const fontSize = activeLayer?.style?.fontSize || 0\n  // 文字水平对齐\n  const textAlign = activeLayer?.style?.textAlign || 'left'\n  // 当前字体粗细\n  const fontWeight = activeLayer?.style?.fontWeight || 400\n  // 当前字体是否有下划线\n  const hasUnderline = activeLayer?.style?.underline || false\n\n  // 图层的层级关系\n  const levelInfo = {\n    min: 1,\n    max: 100,\n    current: 1\n  }\n  if (activeLayer) {\n    levelInfo.current = layers.findIndex(l => l.id === activeLayer.id) + 1\n    levelInfo.max = layers.length\n  }\n\n  // 选择颜色\n  const onColorChange = (clr: ColorResult) => {\n    const rgba = `rgba(${clr.rgb.r}, ${clr.rgb.g}, ${clr.rgb.b}, ${clr.rgb.a})`\n    // 文本\n    if (layerType === LAYER_TYPE.TEXT) {\n      const layer = cloneDeep(activeLayer)\n      if (layer?.type === 'text' && layer.style) {\n        layer.style.color = rgba\n        setLayer(layer)\n      }\n    }\n    // 背景\n    if (layerType === LAYER_TYPE.BACKGROUND) {\n      setBackgroundColor(rgba)\n    }\n  }\n\n  // 选择字体\n  const onFontChange = (val: string) => {\n    const layer = cloneDeep(activeLayer)\n    if (layer?.type === 'text' && layer.style) {\n      layer.style.font = val\n      setLayer(layer)\n    }\n  }\n\n  // 改变字体大小\n  const onFontsizeChange = (val: string) => {\n    const size = Number(val)\n    if (!isNaN(size)) {\n      const layer = cloneDeep(activeLayer)\n      if (layer?.type === 'text' && layer.style) {\n        layer.style.fontSize = size / layerScale\n        setLayer(layer)\n        setNeedUpdateLayerHeight(true)\n      }\n    }\n  }\n\n  // 改变字体粗细\n  const onWeightChange = () => {\n    const layer = cloneDeep(activeLayer)\n    if (layer?.type === 'text' && layer.style) {\n      layer.style.fontWeight = layer.style.fontWeight === 700 ? 400 : 700\n      setLayer(layer)\n    }\n  }\n\n  // 设置下划线\n  const onUnderlineChange = () => {\n    const layer = cloneDeep(activeLayer)\n    if (layer?.type === 'text' && layer.style) {\n      layer.style.underline = !layer.style.underline\n      setLayer(layer)\n    }\n  }\n\n  // 改变文本水平对齐\n  const onTextAlignChange = () => {\n    let align: Align = 'left'\n    if (textAlign === 'left') align = 'center'\n    if (textAlign === 'center') align = 'right'\n    if (textAlign === 'right') align = 'left'\n    const layer = cloneDeep(activeLayer)\n    if (layer?.type === 'text' && layer.style) {\n      layer.style.textAlign = align\n      setLayer(layer)\n    }\n  }\n\n  // 翻转图片\n  const onReverseImage = (direction: 'x' | 'y') => {\n    const layer = cloneDeep(activeLayer)\n    if (layer?.reverse) {\n      if (direction === 'x') {\n        layer.reverse.x = layer.reverse.x === 1 ? -1 : 1\n      }\n      if (direction === 'y') {\n        layer.reverse.y = layer.reverse.y === 1 ? -1 : 1\n      }\n      setLayer(layer)\n    }\n  }\n\n  // 改变层级\n  const onLevelChange = (val: number) => {\n    // 下 -> 上\n    if (val > levelInfo.current) {\n      layers.forEach((l, idx) => {\n        if (idx + 1 > levelInfo.current && idx + 1 <= val) {\n          setLayerLevel(l.id, l.zIndex - 1)\n        }\n      })\n      activeLayer && setLayerLevel(activeLayer.id, activeLayer.zIndex + (val - levelInfo.current))\n    } else { // 上 -> 下\n      layers.forEach((l, idx) => {\n        if (idx + 1 >= val && idx + 1 < levelInfo.current) {\n          setLayerLevel(l.id, l.zIndex + 1)\n        }\n      })\n      activeLayer && setLayerLevel(activeLayer.id, activeLayer.zIndex - (levelInfo.current - val))\n    }\n    setLayers(cloneDeep(layers).sort((a, b) => a.zIndex - b.zIndex))\n  }\n\n  // 删除图层\n  const onRemove = () => {\n    const layer = layers.find(layer => layer.isSelected)\n    if (layer) {\n      removeLayer(layer.id)\n      setLayerType(LAYER_TYPE.EMPTY)\n    }\n  }\n\n  // 清空画布\n  const onClear = () => {\n    setLayers([])\n  }\n\n  return <ToolBarWrapper>\n    <ItemGroup>\n      {/* 颜色 */}\n      {[LAYER_TYPE.BACKGROUND, LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem>\n          <Popover\n            content={<ChromePicker color={color} onChange={onColorChange} />}\n            trigger=\"click\"\n          >\n            <ColorItem style={{ backgroundColor: color }} />\n          </Popover>\n        </ToolItem>\n      }\n      {/* 字体 */}\n      {[LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem>\n          <Select\n            value={font}\n            style={{ width: 140 }}\n            placeholder=\"选择字体\"\n            onChange={onFontChange}\n          >\n            {FONT_LIST.map(f => <Option key={f.value} value={f.value}><span style={{ fontFamily: f.value }}>{f.name}</span></Option>)}\n          </Select>\n        </ToolItem>\n      }\n      {/* 字体大小 */}\n      {[LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem>\n          <Select\n            value={(fontSize * layerScale).toFixed(0)}\n            style={{ width: 100, textAlign: 'center' }}\n            placeholder=\"字体大小\"\n            onChange={onFontsizeChange}\n          >\n            {FONTSIZE_LIST.map(size => <Option key={size} value={size}>{size}</Option>)}\n          </Select>\n        </ToolItem>\n      }\n      {/* 加粗 */}\n      {[LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem className={fontWeight === 700 ? 'active' : ''} onClick={onWeightChange}>\n          <BoldOutlined style={{ fontSize: 24 }} />\n        </ToolItem>\n      }\n      {/* 下划线 */}\n      {[LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem className={hasUnderline ? 'active' : ''} onClick={onUnderlineChange}>\n          <UnderlineOutlined style={{ fontSize: 24 }} />\n        </ToolItem>\n      }\n      {/* 水平对齐 */}\n      {[LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem onClick={onTextAlignChange}>\n          {textAlign === 'left' && <AlignLeftOutlined style={{ fontSize: 24 }} />}\n          {textAlign === 'center' && <AlignCenterOutlined style={{ fontSize: 24 }} />}\n          {textAlign === 'right' && <AlignRightOutlined style={{ fontSize: 24 }} />}\n        </ToolItem>\n      }\n      {/* 图片翻转 */}\n      {[LAYER_TYPE.IMAGE].includes(layerType) &&\n        <ToolItem>\n          <Dropdown \n            overlay={\n              <Menu style={{ width: 120 }}>\n                <Menu.Item\n                  key=\"x\"\n                  style={{ padding: '10px' }}\n                  icon={<SwapOutlined />}\n                  onClick={() => onReverseImage('x')}\n                >\n                  水平翻转\n                </Menu.Item>\n                <Menu.Item\n                  key=\"y\"\n                  style={{ padding: '10px' }}\n                  icon={<SwapOutlined style={{ transform: 'rotate(90deg)' }} />}\n                  onClick={() => onReverseImage('y')}\n                >\n                  垂直翻转\n                </Menu.Item>\n              </Menu>\n            }\n            trigger={['click']}\n          >\n            <span className=\"text\">翻转</span>\n          </Dropdown>\n        </ToolItem>\n      }\n    </ItemGroup>\n    <ItemGroup>\n      {/* 图层层级 */}\n      {[LAYER_TYPE.IMAGE, LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem>\n          <Popover\n            content={\n              <Slider\n                value={levelInfo.current}\n                min={levelInfo.min}\n                max={levelInfo.max}\n                style={{ width: 180 }}\n                onChange={onLevelChange}\n              />\n            }\n            trigger=\"click\"\n            placement=\"bottomRight\"\n          >\n            <span className=\"text\">层级调整</span>\n          </Popover>\n        </ToolItem>\n      }\n      {/* 删除 */}\n      {[LAYER_TYPE.IMAGE, LAYER_TYPE.TEXT].includes(layerType) &&\n        <ToolItem onClick={onRemove}>\n          <DeleteOutlined style={{ fontSize: 24 }} />\n        </ToolItem>\n      }\n      {/* 清空画布 */}\n      {[LAYER_TYPE.EMPTY].includes(layerType) &&\n        <ToolItem onClick={onClear}>\n          <span className=\"text\">清空画布</span>\n        </ToolItem>\n      }\n    </ItemGroup>\n  </ToolBarWrapper>\n})\n\nconst ToolBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 46px;\n  padding: 0 10px;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n  user-select: none;\n`\n\nconst ItemGroup = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst ToolItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &.active {\n    background-color: rgba(64,87,109,.07);\n  }\n\n  &:hover {\n    background-color: rgba(64,87,109,.07);\n  }\n\n  .text {\n    padding: 0 10px;\n    font-size: 16px;\n  }\n\n  input[type=\"search\"] {\n    text-align: center;\n  }\n`\n\nconst ColorItem = styled.div`\n  width: 28px;\n  height: 28px;\n  border: 2px solid #666;\n  border-radius: 4px;\n`","import React, { MouseEvent, useCallback, useEffect, useRef, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Footer from \"./Footer\";\nimport Canvas from \"./Canvas\";\nimport ToolBar from \"./tool-bar/Index\"\nimport { ScaleContext, BackgroundContext } from 'store/context';\nimport { templateStore } from 'store/template';\nimport { observer } from 'mobx-react';\n\n// 编辑器\nexport default observer(() => {\n  // 画布缩放值\n  const [scale, setScale] = useState(1)\n  // 画布父级容器dom ref\n  const canvasWrapperRef = useRef<HTMLDivElement>(null)\n  // 获取模板数据\n  const { template, resetSelectStatus, removeLayer } = templateStore\n\n  // 是否选中背景\n  const [isSelectedBackground, setIsSelectedBackground] = useState(false)\n\n  // 首次渲染画布尺寸适配\n  useEffect(() => {\n    const wrapperEl = canvasWrapperRef.current\n    const canvasWidth = template.global.width\n    const canvasHeight = template.global.height\n    let scale = 1\n    if (wrapperEl && wrapperEl.clientWidth < canvasWidth + 100) {\n      scale = (wrapperEl.clientWidth - 100) / canvasWidth\n    }\n    if (wrapperEl && wrapperEl.clientHeight < (canvasHeight * scale + 100)) {\n      scale = (wrapperEl.clientHeight - 100) / canvasHeight\n    }\n    setScale(scale)\n  }, [template.global.width, template.global.height])\n\n  // 删除图层\n  const onDeleteListener = useCallback((e: KeyboardEvent) => {\n    // 页面失焦时才能删除\n    if (document.activeElement === document.body || document.activeElement === null) {\n      if (e.key === 'Backspace' || e.key === 'Delete') {\n        const layer = template.layers.find(layer => layer.isSelected)\n        if (layer) {\n          removeLayer(layer.id)\n        }\n      }\n    }\n  }, [removeLayer, template.layers])\n\n  useEffect(() => {\n    document.addEventListener('keydown', onDeleteListener)\n    return () => { document.removeEventListener('keydown', onDeleteListener) }\n  }, [onDeleteListener])\n\n  // 取消所有图层的选中状态包括背景\n  const resetStatus = (e: MouseEvent<HTMLElement>) => {\n    // self\n    if ((e.target as HTMLElement).id === 'CanvasWrapper') {\n      resetSelectStatus()\n      setIsSelectedBackground(false)\n    }\n  }\n\n  return <Wrapper>\n    <ToolBar />\n    <CanvasWrapper ref={canvasWrapperRef} id=\"CanvasWrapper\" onMouseDown={resetStatus}>\n      <BackgroundContext.Provider value={{ isSelectedBackground, setIsSelectedBackground }}>\n        <ScaleContext.Provider value={scale}>\n          <Canvas />\n        </ScaleContext.Provider>\n      </BackgroundContext.Provider>\n    </CanvasWrapper>\n    <Footer scale={scale} setScale={(num) => setScale(num)} />\n  </Wrapper>\n})\n\nconst Wrapper = styled.div`\n  position: relative;\n  flex: 1;\n  overflow: hidden;\n`\n\nconst CanvasWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 88px);\n  overflow: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    background: #eef2f8;\n\n    &:horizontal {\n      height: 8px;\n    }\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #eef2f8;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: #eef2f8;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #c4c4c4;\n    border: 8px solid rgba(0, 0, 0, 0);\n    border-radius: 9999px;\n\n    &:hover {\n      background: #adadad;\n    }\n  }\n`","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Sidebar from \"./side-bar/Sidebar\";\nimport Editor from \"./Editor\";\n\nexport default function Main () {\n  return <MainBody>\n    <Sidebar />\n    <Editor />\n  </MainBody>\n}\n\nconst MainBody = styled.main`\n  display: flex;\n  height: calc(100vh - 56px);\n  background-color: #eef2f8;\n  overflow: hidden;\n`\n","import React from 'react';\nimport Nav from 'components/Nav'\nimport Main from 'components/Main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'pages/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}